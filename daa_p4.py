# -*- coding: utf-8 -*-
"""DAA-P4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XF4Di0lguzWCBwlaAH-9sbW3hlBklJsl
"""

#Swap
var1 = 1
var2 = 2
var1, var2 = var2, var1
print(var1,var2)

"""Latihan Slide 6"""

#Latihan Slide 6
var1 = 1
var2 = 2
var3 = 3
var1, var2, var3 = var3, var2, var1
print(var1,var2,var3)

#Bubble Sort
list = [25,21,22,24,23,27,26]

x = len(list)-1
print(0,list)
for idx in range(x):
  if list[idx]>list[idx+1]:
    list[idx],list[idx+1]=list[idx+1],list[idx]
    print(idx+1,list)

list = [25,21,22,24,23,27,26]

def BubbleSort(list):
  x = len(list)-1
  for y in range(x,0,-1):
    for idx in range(y):
      if list[idx]>list[idx+1]:
        list[idx],list[idx+1]=list[idx+1],list[idx]
    return list

BubbleSort(list)

"""Latihan Slide 10"""

#Latihan Slide 10
list = [100,20,60,90,40,30,10]

y = 0
x = len(list)-1
print(0,list)
for rev in range(10):
  for idx in range(x):
    y=y+1
    if list[idx]>list[idx+1]:
      list[idx],list[idx+1]=list[idx+1],list[idx]
      print(y,list)

#Insertion Sort
def InsertionSort(list):
  for i in range(1, len(list)):
    j = i-1
    next = list[i]

    while (list[j] > next) and (j >= 0):
      list[j+1] = list[j]
      j=j-1
    list[j+1] = next
  return list

list = [35,31,32,34,33,37,36]

InsertionSort(list)

"""Latihan Slide 13"""

#Latihan Slide 13
list = [89,15,57,16,25,11,75]

InsertionSort(list)

#Selection Sort
def SelectionSort(list):
  for fill_slot in range(len(list) - 1, 0, -1):
    max_index = 0
    for location in range(1, fill_slot + 1):
      if list[location] > list[max_index]:
        max_index = location
    list[fill_slot],list[max_index] = list[max_index],list[fill_slot]
  return list

list = [70,15,25,19,34,33]
SelectionSort(list)

list

"""Latihan Slide 17"""

#Latihan Slide 17
list = [89,12,57,16,25]
SelectionSort(list)

def LinearSearch(list, item):
  index = 0
  found = False

  while index < len(list) and found is False:
    if list[index] == item:
      found = True
    else:
      index = index + 1
  return found

list = [12,33,11,99,22,55,90]
print(LinearSearch(list, 12))
print(LinearSearch(list, 91))

"""Latihan Slide 21"""

#Latihan Slide 21
list = ["y","u","i","w","o","a","q","u","j","p"]
print(LinearSearch(list, "a"))

def BinarySearch(lst, item):
    first = 0
    last = len(lst) - 1

    while first <= last:
        midpoint = (first + last) // 2

        if lst[midpoint] == item:
            return True
        elif item < lst[midpoint]:
            last = midpoint - 1
        else:
            first = midpoint + 1

    return False

list = [12, 33, 11, 99, 22, 55, 90]
print(BinarySearch(list, 12))
print(BinarySearch(list, 91))

"""Latihan Slide 24"""

#Soal Slide 24
list = ['y','u','i','w','o','a','q','u','j','p']
print(BinarySearch(list, 'u'))

def IntPolsearch(list,x):
  idx0 = 0
  idxn = (len(list) - 1 )
  found = False
  while idx0 <= idxn and x >= list[idx0] and x <= list[idxn]:
    mid = idx0 +int(((float(idxn - idx0)/(list[idxn] - list[idx0])) * ( x - list[idx0])))
    if list[mid] == x:
      found = True
      return found

    if list[mid] < x:
      idx0 = mid + 1
  return found

list = [12,33,11,99,22,55,90]
sorted_list = BubbleSort(list)
print(IntPolsearch(list, 12))
print(IntPolsearch(list, 91))

"""Latihan Slide 27"""

#Latihan Slide 27
list = ['y','u','i','w','o','a','q','u','j','p']
print(IntPolsearch(list, 'u'))

"""Tidak bisa karena IntPolsearch digunakan untuk mencari Integer."""